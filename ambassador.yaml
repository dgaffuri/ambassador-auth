---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
spec:
  type: NodePort
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador
rules:
- apiGroups: [""]
  resources:
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["create", "update", "patch", "get", "list", "watch"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ambassador
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador
subjects:
- kind: ServiceAccount
  name: ambassador
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Module
      name:  ambassador
      config:
        use_remote_address: false
        x_forwarded_proto_redirect: true
        service_port: 8080
      ---
      apiVersion: ambassador/v1
      kind:  AuthService
      name:  authentication
      auth_service: 127.0.0.1:9080
      allowed_request_headers:
      - "location"
      - "upgrade"
      - "x-forwarded-proto"
      - "x-forwarded-host"
      allowed_authorization_headers:
      - "set-cookie"
      - "www-authenticate"
      - "x-remote-user"
      - "x-remote-groups"
      - "x-tenant"
      - "x-trusted"
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  login_oidc_mapping
      prefix: /login/oidc
      rewrite: /login/oidc
      service: 127.0.0.1:9080
spec:
  type: LoadBalancer
  ports:
  - port: 8100
    targetPort: 8080
  selector:
    service: ambassador
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: statsd-exporter-config
data:
  exporterConfiguration:  |
    ---
    mappings:
    - match: 'envoy.cluster.*.upstream_rq_total'
      name: "envoy_cluster_upstream_rq_total"
      timer_type: 'histogram'
      labels:
        cluster_name: "$1"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: ambassador
    spec:
      serviceAccountName: ambassador
      volumes:
      - name: oidc-config
        secret:
          secretName: oidc-config
      containers:
      - name: ambassador
        image: quay.io/datawire/ambassador:0.50.0-ea6
        resources:
          limits:
            cpu: 1
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 100Mi
        env:
        - name: STATSD_ENABLED
          value: 'true'
        - name: SCOUT_DISABLED
          value: '1'
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: admin
          containerPort: 8877
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
      - name: oidc-auth
        image: dgaffuri/ambassador-auth-oidc:0.20
        imagePullPolicy: Never
        ports:
        - name: http-api
          containerPort: 9080
        env:
          - name: PORT
            value: "9080"
          - name: CONFIG_FILE
            value: "/etc/oidc-auth/oidc-config.json"
        volumeMounts:
        - name: oidc-config
          mountPath: "/etc/oidc-auth"
          readOnly: true
      securityContext:
        runAsUser: 1000
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: statsd-sink
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        service: statsd-sink
    spec:
      volumes:
      - name: stats-exporter-mapping-config
        configMap:
          name: statsd-exporter-config
          items:
          - key: exporterConfiguration
            path: mapping-config.yaml
      containers:
      - name: statsd-sink
        image: prom/statsd-exporter:v0.6.0
        ports:
        - name: metrics
          containerPort: 9102
        - name: listener
          containerPort: 8125
        args: ["-statsd.listen-udp=:8125","-statsd.listen-tcp=:8125","-statsd.mapping-config=/statsd-exporter/mapping-config.yaml"]
        volumeMounts:
        - name: stats-exporter-mapping-config
          mountPath: /statsd-exporter/
          readOnly: true
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: statsd-sink
  labels:
    service: statsd-sink
spec:
  selector:
    service: statsd-sink
  ports:
  - protocol: UDP
    port: 8125
    name: statsd-metrics
  - protocol: TCP
    port: 9102
    name: prometheus-metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: statsd-sink-monitor
  labels:
    ambassador: monitoring
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      service: statsd-sink
  endpoints:
  - port: prometheus-metrics
